const http = require('http');

http.createServer((request, response) => {
  console.log("Recieved request.headers:", request.headers);
  response.setHeader('Content-Type', 'text/html; charset=UTF-8');
  response.setHeader('Transfer-Encoding', 'chunked');

  let html =
    '<!DOCTYPE html>' +
      '<html lang="en">' +
      '<head>' +
        '<meta charset="utf-8">' +
        '<title>Chunked transfer encoding test</title>' +
      '</head>' +
    '<body>';

  response.write(html);
  html = '<h1>Chunked transfer encoding test</h1>'

  response.write(html);

  // Now imitate a long request which lasts 5 seconds.
  setTimeout(function(){
    html = '<h5>This is a chunked response after 5 seconds. The server should not close the stream before all chunks are sent to a client.</h5>'
    response.write(html);
    // since this is the last chunk, close the stream.
    html = '</body>' + '</html';
    response.end(html);
  }, 5000);

  // this is another chunk of data sent to a client after 2 seconds before the
  // 5-second chunk is sent.
  setTimeout(function(){
    html = '<h5>This is a chunked response after 2 seconds. Should be displayed before 5-second chunk arrives.</h5>'
    response.write(html);
    }, 2000);

}).listen(7777, {});
